
description = "A micro ORM that gives developers control over the SQL executed while also providing an easy way to do basic CRUD operations on aggregates."

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    // Database
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.193'
    testCompile group: 'mysql', name: 'mysql-connector-java', version: '5.1.40'

    // Unit testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

idea {
    module {
        iml.withXml { xmlFile ->
            def facetManager = xmlFile.asNode().component.find { it.@name == 'FacetManager' } as Node
            if (!facetManager) {
                facetManager = xmlFile.asNode().appendNode('component', [name: 'FacetManager'])
            }
            def builder = new NodeBuilder()
            def infinitestFacet = builder.facet(type: "Infinitest", name: 'Infinitest') {
                configuration {}
            }
            facetManager.append infinitestFacet
        }
    }
}

archivesBaseName = "photon-core"